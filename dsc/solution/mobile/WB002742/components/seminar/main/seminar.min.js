'use strict';

module.exports = {
    props: ['content'],
    components: {
        'accordion': httpVueLoader('components/seminar/accordion/Accordion.vue'),
        'progressBars': httpVueLoader('components/seminar/progressBars/ProgressBars.vue')
    },
    computed: {
        percentages: function percentages() {
            // 排序各組數值以取得最大值
            var percentages = [];
            this.content.progressBars.forEach(function (progressBar) {
                var percentage = [];
                progressBar.items.forEach(function (item) {
                    percentage.push(item.percentage);
                });
                percentage.sort(function (a, b) {
                    return b - a;
                });
                percentages.push(percentage);
            });
            return percentages;
        },
        progressBars: function progressBars() {
            var _this = this;

            // 取得各組最大值
            this.content.progressBars.forEach(function (progressBar, idx) {
                progressBar.items.forEach(function (item) {
                    if (item.percentage === _this.percentages[idx][0]) {
                        item['highest'] = true;
                    }
                });
            });
            return this.content.progressBars;
        }
    },
    mounted: function mounted() {
        if (typeof NProgress !== 'undefined') {
            NProgress.done();
        }
    }
};